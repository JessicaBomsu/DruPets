// js/chat.js - VERS√ÉO COMPLETA E ATUALIZADA (Incluindo Lei de Den√∫ncia)

class ChatSystem {
    constructor() {
        this.isOpen = false;
        this.init();
    }

    init() {
        this.setupEventListeners();
        this.setupSuggestionButtons(); 
        this.loadChatHistory();
        this.startAutoCleanup(); 
    }

    setupEventListeners() {
        const chatToggle = document.getElementById('chatToggle');
        const chatClose = document.getElementById('chatClose');
        const chatSend = document.getElementById('chatSend');
        const chatInput = document.getElementById('chatInput');

        if (chatToggle) {
            chatToggle.addEventListener('click', () => this.toggleChat());
        }

        if (chatClose) {
            chatClose.addEventListener('click', () => this.closeChat());
        }

        if (chatSend) {
            chatSend.addEventListener('click', () => this.sendMessage());
        }

        if (chatInput) {
            chatInput.addEventListener('keypress', (e) => {
                if (e.key === 'Enter') {
                    this.sendMessage();
                }
            });
        }
    }

    // L√≥gica para que os bot√µes de sugest√£o funcionem
    setupSuggestionButtons() {
        const suggestionButtons = document.querySelectorAll('.suggestion-btn');
        const chatInput = document.getElementById('chatInput');
        const suggestions = document.getElementById('chatSuggestions'); 
        
        if (suggestions) {
            // Se houver bot√µes de sugest√£o, exibe o container
            suggestions.style.display = 'flex'; 
        }

        suggestionButtons.forEach(button => {
            button.addEventListener('click', () => {
                const question = button.getAttribute('data-question');
                if (chatInput) {
                    chatInput.value = question;
                    this.sendMessage();
                }
            });
        });
    }

    toggleChat() {
        const chatPopup = document.getElementById('chatPopup');
        if (!chatPopup) return;

        this.isOpen = !this.isOpen;
        chatPopup.classList.toggle('active');
        if (this.isOpen) {
            this.loadChatHistory();
        }
    }

    closeChat() {
        const chatPopup = document.getElementById('chatPopup');
        if (chatPopup) {
            this.isOpen = false;
            chatPopup.classList.remove('active');
        }
    }

    startAutoCleanup() {
        // Limpar hist√≥rico a cada 24 horas (exemplo)
        const ONE_DAY = 24 * 60 * 60 * 1000;
        setInterval(() => {
            this.clearChatHistory();
        }, ONE_DAY);
    }

    sendMessage() {
        const chatInput = document.getElementById('chatInput');
        const userMessage = chatInput ? chatInput.value.trim() : '';

        if (userMessage === '') return;

        // 1. Adiciona mensagem do usu√°rio
        this.addMessage('user', userMessage);
        chatInput.value = '';

        // 2. Obt√©m e Adiciona resposta do bot
        const botResponseText = this.getBotResponse(userMessage);
        
        // Simula um pequeno delay para a resposta do bot (melhora a experi√™ncia)
        setTimeout(() => {
            this.addMessage('bot', botResponseText);
        }, 500);
    }
    
    // =======================================================================
    // M√âTODO PRINCIPAL DE RESPOSTA (Cont√©m todas as suas informa√ß√µes)
    // =======================================================================
    getBotResponse(userMessage) {
        const msg = userMessage.toLowerCase().trim();

        // -----------------------------------------------------
        // 1. INFORMA√á√ïES SOBRE DEN√öNCIAS E LEIS (NOVO)
        // -----------------------------------------------------

        if (msg.includes('denuncia') || msg.includes('maus-tratos') || msg.includes('lei sans√£o') || msg.includes('crime')|| msg.includes('agress√£o aos animais')|| msg.includes('agress√£o')) {
            return `**üö® COMO DENUNCIAR MAUS-TRATOS:**
Den√∫ncias graves de abuso, maus-tratos, ferimento ou mutila√ß√£o de animais devem ser feitas √†s autoridades competentes.

1.  **Canais Locais (S√£o Paulo):** Para servi√ßos municipais (ado√ß√£o, remo√ß√£o de animal morto, castra√ß√£o), utilize o **Portal SP156**.
    * **Link:** https://sp156.prefeitura.sp.gov.br/portal/servicos
2.  **Lei Federal:** O crime √© amparado pelo **Art. 32 da Lei n¬∫ 9.605** (Lei de Crimes Ambientais).
    * **Lei Sans√£o (Lei n¬∫ 14.064/2020):** A pena para maus-tratos a **c√£es e gatos** √© de **reclus√£o de 2 a 5 anos**, multa e proibi√ß√£o de guarda do animal.

O DruPets atua apenas como intermedi√°rio na listagem e conscientiza√ß√£o, mas voc√™ deve buscar as autoridades para a a√ß√£o legal.`;
        }

        // -----------------------------------------------------
        // 2. INFORMA√á√ïES SOBRE O PROJETO (DruPets / Pex)
        // -----------------------------------------------------

        if (msg.includes('o que √©') || msg.includes('drupets') || msg.includes('objetivo')) {
            return `O **DruPets**  √© uma plataforma web que atua como **intermedi√°ria**. Foi criada para centralizar informa√ß√µes e facilitar o acesso a servi√ßos essenciais para a prote√ß√£o animal: **ado√ß√£o respons√°vel**, **listagem de ONGs** e **registro de den√∫ncias**. Queremos potencializar o alcance das ONGs e simplificar o processo de ajuda para o cidad√£o.`;
        }

        if (msg.includes('quem somos') || msg.includes('equipe')|| msg.includes('quem s√£o vcs?') || msg.includes('quem s√£o vo√ß√™s?')) {
            return `Somos a equipe **"DRUMMONETES & AGREGADO"**, um grupo de estudantes de Ci√™ncia da Computa√ß√£o e Sistemas de Informa√ß√£o. A equipe √© composta por: Adrielly Rodrigues dos Santos, Barbara Coelho, Felipe Rodrigues Guimar√£es Geraldino, Jaciendy Nunes Teixeira, Jessica Emely Bomsucesso e Victoria Fernanda.`;
        }

        if (msg.includes('tecnologia') || msg.includes('utilizadas') || msg.includes('linguagens')|| msg.includes('quais tecnologia vcs usaram?')|| msg.includes('limguagem usada')) {
            return `As tecnologias utilizadas no desenvolvimento da plataforma s√£o:
- **Frontend:** HTML, CSS e JavaScript
- **Backend/Banco de Dados:** Firebase
- **Integra√ß√µes:** APIs (Google Maps e Listagem de ONGs)
- **Futuro (IA):** Python com foco em IA e Bibliotecas de reconhecimento de imagem.`;
        }

        // -----------------------------------------------------
        // 3. --- NOVO BLOCO: CONFIABILIDADE E SEGURAN√áA ---
        // -----------------------------------------------------

        
        if (msg.includes('confiavel') || msg.includes('seguran√ßa') || msg.includes('confian√ßa') || msg.includes('verificado') || msg.includes('cuidado') || msg.includes('ongs')) {
            return `**üîí Seguran√ßa e Confian√ßa no DruPets:**

        O **DruPets** √© uma plataforma **intermedi√°ria** criada para facilitar a conex√£o entre ONGs/Protetores e Cidad√£os.

        **1. Nosso Compromisso (Plataforma):**
        * Tratamos seus dados com seguran√ßa, conforme a **LGPD**.
        * Nosso objetivo √© fornecer um espa√ßo √©tico para a prote√ß√£o animal.

        **2. A Responsabilidade do Usu√°rio (Seu Cuidado):**
        * **Verifica√ß√£o de ONGs:** Embora listemos organiza√ß√µes, **sempre verifique** a idoneidade da ONG ou Protetor Independente atrav√©s de canais externos (redes sociais, CNPJ, refer√™ncias).
        * **Animais Cadastrados:** As informa√ß√µes e fotos dos animais s√£o de responsabilidade de quem as cadastra. **Sempre marque encontros em locais p√∫blicos** e fa√ßa o acompanhamento do animal antes e depois da ado√ß√£o.
        * **Transpar√™ncia:** Se desconfiar de algo, **denuncie** a ocorr√™ncia √†s autoridades (veja a op√ß√£o sobre Den√∫ncias).

        A sua cautela √© a melhor ferramenta para garantir uma ado√ß√£o segura e respons√°vel!`;
        }

        // -----------------------------------------------------
        // 4. DICAS DE CUIDADO, BRINQUEDOS E SA√öDE
        // -----------------------------------------------------

        if (msg.includes('brinquedo') && (msg.includes('c√£o') || msg.includes('cachorro'))|| msg.includes('brinquedos cachorros')) {
            return `**Dicas de Brinquedos para C√£es:**
- **Roedores:** Brinquedos robustos de borracha (como Kong) recheados. Auxilia na sa√∫de mental e dental.
- **Puxadores:** Cordas de nylon para cabo-de-guerra.
- **Farejadores:** Brinquedos que escondem petiscos (estimula√ß√£o mental).
- **Ativos:** Bolas e frisbees.
**Dica de Seguran√ßa:** Supervisione e descarte brinquedos quebrados.`;
        }

        if (msg.includes('brinquedo') && msg.includes('gato')|| msg.includes('brinquedos gatos')) {
            return `**Dicas de Brinquedos para Gatos:**
- **Ca√ßa:** Varinhas com penas ou bichinhos. Ativa o instinto de ca√ßa.
- **Est√≠mulo:** Bolinhas com guizos ou Catnip.
- **Catnip (erva-do-gato):** Estimulante natural e seguro para a maioria dos gatos.`;
        }
        
        if (msg.includes('alimenta√ß√£o') || msg.includes('dieta') || msg.includes('t√≥xicos')) {
            return `**Cuidados com a Alimenta√ß√£o:**
1.  **Veterin√°rio:** Consulte sempre antes de mudar a dieta.
2.  **√Ågua Fresca:** Mantenha √°gua limpa e fresca sempre dispon√≠vel.
3.  **Ra√ß√µes de Qualidade:** Opte por ra√ß√µes de alta qualidade.
4.  **Alimentos T√≥xicos:** **Evite** doces, chocolate, cebola, alho, uvas e abacate.`;
        }
        
        if (msg.includes('cuidados') || msg.includes('sa√∫de') || msg.includes('preventivos')) {
            return `**Cuidados Essenciais para a Sa√∫de:**
1.  **Veterin√°rio:** Consultas regulares, vacina√ß√£o e vermifuga√ß√£o em dia.
2.  **Higiene:** Banhos regulares, escova√ß√£o dos dentes e corte de unhas.
3.  **Comportamento:** Fique atento a mudan√ßas (letargia, perda de apetite) e procure o veterin√°rio imediatamente.`;
        }

        // -----------------------------------------------------
        // 5. SITES DE AJUDA / REFER√äNCIA
        // -----------------------------------------------------
        
        if (msg.includes('sites') || msg.includes('ajuda') || msg.includes('refer√™ncia')) {
            return `Para mais informa√ß√µes consulte artigos de confian√ßa:
- **C√£es Online:** Sa√∫de, comportamento, nutri√ß√£o e ra√ßas.
- **Petlove (D√∫vidas):** Artigos revisados por especialistas sobre a cria√ß√£o de animais.
- **Cachorro Verde:** Especializado em alimenta√ß√£o natural (Dra. Sylvia Ang√©lico).
- **Blog do Bicho (G1):** Conte√∫do atualizado sobre bem-estar animal.`;
        }
        // -----------------------------------------------------
        // 6. adotar um pet 
        // -----------------------------------------------------

            
        if (msg.includes('como adotar') || msg.includes('passos para ado√ß√£o') || msg.includes('processo de ado√ß√£o')) {
            return `**üêæ Guia R√°pido de Ado√ß√£o no DruPets/Pex:**
        O processo de ado√ß√£o respons√°vel √© simples e seguro:

        1.  **Escolha seu Pet:** Navegue pela se√ß√£o "Adotar um Pet" para ver os animais dispon√≠veis (c√£es, gatos e outros). Use os filtros para encontrar seu companheiro ideal.
        2.  **Verifique as Regras:** Leia atentamente a descri√ß√£o e os requisitos de ado√ß√£o definidos pelo respons√°vel (ONG ou protetor).
        3.  **Entre em Contato:** Utilize as informa√ß√µes de contato fornecidas (telefone, e-mail ou rede social) para falar diretamente com o respons√°vel.
        4.  **Entrevista:** Prepare-se para uma entrevista, pois o respons√°vel garantir√° que sua casa e estilo de vida s√£o adequados para o animal.
        5.  **Termo de Ado√ß√£o:** Ap√≥s a aprova√ß√£o, ser√° assinado o Termo de Ado√ß√£o Respons√°vel.

        Lembre-se: Adotar √© um compromisso para a vida!`;
        }


                // --- 7 NOVO BLOCO: ANIMAIS PERDIDOS E LOCALIZADOS ---
        if (msg.includes('perdi meu pet') || msg.includes('animal perdido') || msg.includes('encontrei um pet') || msg.includes('animal achado')|| msg.includes('achei um animal')|| msg.includes('achei um cachorro')|| msg.includes('achei um gato')) {
            return `**üîé Pet Perdido ou Localizado? Siga estes passos:**

        **Se voc√™ PERDEU um animal:**
        1.  **Cadastre no DruPets:** V√° na se√ß√£o "Cadastrar Animal" e preencha o formul√°rio na aba **"Perdido"** com todas as informa√ß√µes e uma foto recente.
        2.  **Contato:** Monitore o contato (telefone, e-mail) que voc√™ cadastrou.
        3.  **Procure o Encontrado:** Verifique a lista de animais na aba **"Localizados"** do site.

        **Se voc√™ ENCONTROU um animal:**
        1.  **Cadastre no DruPets:** V√° na se√ß√£o "Cadastrar Animal" e preencha o formul√°rio na aba **"Localizado (Achado)"**.
        2.  **Contato:** Preencha seus dados de contato e aguarde o respons√°vel entrar em contato.
        3.  **Cuidado:** Se poss√≠vel, acolha o animal temporariamente e verifique se ele possui coleira, plaqueta ou chip para encontrar o tutor mais rapidamente.

        **Lembre-se:** A plataforma DruPets conecta pessoas. Seja o mais detalhado e r√°pido poss√≠vel ao registrar a ocorr√™ncia!`;
        }

        // --- 8 NOVO BLOCO: golpe---

        if ( msg.includes('pix') || msg.includes('vcs cobram') || msg.includes('golpe') || msg.includes('pagamento') || msg.includes('custo')|| msg.includes('taxa') ) {
            return `**üîí Seguran√ßa, Golpes e Pagamentos no DruPets:**

        O **DruPets** √© uma plataforma **intermedi√°ria** gratuita que conecta protetores e cidad√£os.

        **‚ö†Ô∏è ALERTA DE GOLPE E PAGAMENTO:**
        * **ADO√á√ÉO N√ÉO √â VENDA:** A ado√ß√£o respons√°vel geralmente envolve apenas uma taxa de castra√ß√£o/vacina√ß√£o, mas **nunca** grandes valores de venda.
        * **N√ÉO FA√áA TRANSFER√äNCIAS:** Nunca transfira dinheiro ou envie Pix para desconhecidos que alegam que o animal "s√≥ ser√° liberado ap√≥s o pagamento".
        * **DruPets N√ÉO COBRA:** A plataforma DruPets **n√£o cobra** taxas pela ado√ß√£o, nem gerencia pagamentos. Qualquer pedido de pagamento em nome do site √© **GOLPE**.
        * 
        A sua cautela √© a melhor ferramenta para garantir uma ado√ß√£o segura e respons√°vel!`;
        }

        // -----------------------------------------------------
        // 10. RESPOSTA PADR√ÉO / FALLBACK
        // -----------------------------------------------------

        return 'Desculpe, n√£o entendi sua pergunta. Posso ajudar com informa√ß√µes sobre o **Projeto DruPets**, **Den√∫ncias e Leis**, **Termos de Uso** ou **Dicas de Cuidados e Brinquedos**?';
    }
    
    // =======================================================================
    // FUN√á√ïES DE EXIBI√á√ÉO E HIST√ìRICO (Mantidas e Otimizadas)
    // =======================================================================

    addMessage(sender, messageText) {
        const chatMessages = document.getElementById('chatMessages');
        if (!chatMessages) return;

        const messageDiv = document.createElement('div');
        messageDiv.className = `message ${sender}`;
        
        // Formata√ß√£o do conte√∫do: substitui **texto** por <strong>texto</strong> e \n por <br>
        let htmlContent = messageText.replace(/\n/g, '<br>');
        htmlContent = htmlContent.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');
        
        // Permite links se houver
        htmlContent = htmlContent.replace(
                /(Link:)\s*(https?:\/\/[^\s<]+)/g,
                (match, label, url) => `${label} <a href="${url}" target="_blank" rel="noopener noreferrer">Abrir Link</a>`
            );
            
        messageDiv.innerHTML = htmlContent;
        chatMessages.appendChild(messageDiv);

        // Rolagem para a √∫ltima mensagem
        chatMessages.scrollTop = chatMessages.scrollHeight;

        // Salvar no hist√≥rico local
        this.saveChatHistory(sender, messageText);
    }

    saveChatHistory(sender, message) {
        let chatHistory = JSON.parse(localStorage.getItem('chatHistory') || '[]');
        chatHistory.push({ sender, message, timestamp: new Date().toISOString() });
        // Limita o hist√≥rico
        if (chatHistory.length > 50) { 
            chatHistory = chatHistory.slice(-50);
        }
        localStorage.setItem('chatHistory', JSON.stringify(chatHistory));
    }

    loadChatHistory() {
        const chatMessages = document.getElementById('chatMessages');
        if (!chatMessages) return;

        const chatHistory = JSON.parse(localStorage.getItem('chatHistory') || '[]');
        
        // Limpa o conte√∫do atual
        chatMessages.innerHTML = ''; 

        const initialMessageText = 'Ol√°! Bem-vindo ao chat do DruPets! Pergunte-me sobre o site, **Den√∫ncias e Leis**, ou busque dicas de sa√∫de e produtos. Pergunte!';
        
        // Adiciona a mensagem inicial (que n√£o √© salva no hist√≥rico para evitar duplica√ß√£o)
        const initialDiv = document.createElement('div');
        initialDiv.className = 'message bot';
        
        let htmlContent = initialMessageText.replace(/\n/g, '<br>');
        htmlContent = htmlContent.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');
        
        initialDiv.innerHTML = htmlContent;
        chatMessages.appendChild(initialDiv);
        
        // Carrega o hist√≥rico salvo
        chatHistory.forEach(entry => {
            // Ignora a mensagem inicial, caso tenha sido salva por erro
            if (entry.message.trim() === initialMessageText.trim()) return;

            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${entry.sender}`;
            
            // Formata√ß√£o do conte√∫do
            let entryContent = entry.message.replace(/\n/g, '<br>');
            entryContent = entryContent.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');
            entryContent = entryContent.replace(
                /(Link:)\s*(https?:\/\/[^\s<]+)/g,
                (match, label, url) => `${label} <a href="${url}" target="_blank" rel="noopener noreferrer">Abrir Link</a>`
            );
            
            messageDiv.innerHTML = entryContent;
            chatMessages.appendChild(messageDiv);
        });

        // Rolagem para a √∫ltima mensagem
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }

    clearChatHistory() {
        localStorage.removeItem('chatHistory');
        this.loadChatHistory();
    }
}

// Inicializar chat quando o DOM estiver carregado
document.addEventListener('DOMContentLoaded', function() {
    window.chatSystem = new ChatSystem();
});